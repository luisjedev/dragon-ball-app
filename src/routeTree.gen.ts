/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as FavoritesIndexRouteImport } from './routes/favorites/index'
import { Route as DetailsIdIndexRouteImport } from './routes/details/$id/index'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const FavoritesIndexRoute = FavoritesIndexRouteImport.update({
  id: '/favorites/',
  path: '/favorites/',
  getParentRoute: () => rootRouteImport,
} as any)
const DetailsIdIndexRoute = DetailsIdIndexRouteImport.update({
  id: '/details/$id/',
  path: '/details/$id/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/favorites': typeof FavoritesIndexRoute
  '/details/$id': typeof DetailsIdIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/favorites': typeof FavoritesIndexRoute
  '/details/$id': typeof DetailsIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/favorites/': typeof FavoritesIndexRoute
  '/details/$id/': typeof DetailsIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/favorites' | '/details/$id'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/favorites' | '/details/$id'
  id: '__root__' | '/' | '/favorites/' | '/details/$id/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  FavoritesIndexRoute: typeof FavoritesIndexRoute
  DetailsIdIndexRoute: typeof DetailsIdIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/favorites/': {
      id: '/favorites/'
      path: '/favorites'
      fullPath: '/favorites'
      preLoaderRoute: typeof FavoritesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/details/$id/': {
      id: '/details/$id/'
      path: '/details/$id'
      fullPath: '/details/$id'
      preLoaderRoute: typeof DetailsIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  FavoritesIndexRoute: FavoritesIndexRoute,
  DetailsIdIndexRoute: DetailsIdIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
